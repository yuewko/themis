package: jcon

import:
- encoding/json
- github.com/infobloxopen/themis/pdp
- strings

errors:
- id: externalError
  fields:
  - id: err
    type: error
  msg: "%s"
  args:
  - field: err

- id: objectKeyError
  fields:
  - id: token
    type: json.Token
  msg: "Expected string as JSON object key but got %T (%#v)"
  args:
  - field: token
  - field: token

- id: booleanCastError
  fields:
  - id: token
    type: json.Token
  - id: desc
    type: string
  msg: "Expected boolean as %s but got %T (%#v)"
  args:
  - field: desc
  - field: token
  - field: token

- id: numberCastError
  fields:
  - id: token
    type: json.Token
  - id: desc
    type: string
  msg: "Expected number as %s but got %T (%#v)"
  args:
  - field: desc
  - field: token
  - field: token

- id: integerOverflowError
  fields:
  - id: x
    type: float64
  msg: "%f overflows integer"
  args:
  - field: x

- id: stringCastError
  fields:
  - id: token
    type: json.Token
  - id: desc
    type: string
  msg: "Expected string as %s but got %T (%#v)"
  args:
  - field: desc
  - field: token
  - field: token

- id: addressCastError
  fields:
  - id: s
    type: string
  msg: "Can't treat %q as IP address"
  args:
  - field: s

- id: networkCastError
  fields:
  - id: s
    type: string
  - id: err
    type: error
  msg: "Can't treat %q as IP network (%s)"
  args:
  - field: s
  - field: err

- id: domainCastError
  fields:
  - id: s
    type: string
  - id: err
    type: error
  msg: "Can't treat %q as domain name (%s)"
  args:
  - field: s
  - field: err

- id: addressNetworkCastError
  fields:
  - id: s
    type: string
  - id: err
    type: error
  msg: "Can't treat %q as IP address or network (%s)"
  args:
  - field: s
  - field: err

- id: unknownContentFieldError
  fields:
  - id: id
    type: string
  msg: "Unknown content field %q (expected id or items)"
  args:
  - field: id

- id: unknownContentItemFieldError
  fields:
  - id: id
    type: string
  msg: "Unknown content item field %q (expected keys, type or data)"
  args:
  - field: id

- id: unknownTypeError
  fields:
  - id: t
    type: string
  msg: "Unknown value type %q"
  args:
  - field: t

- id: invalidContentItemTypeError
  fields:
  - id: t
    type: int
  msg: "Can't set result type to %q type"
  args:
  - expr: pdp.TypeNames[e.t]

- id: invalidContentKeyTypeError
  fields:
  - id: t
    type: int
  - id: expected
    type: map[int]bool
  msg: "Can't use %q type as a key in content item (expected %s)"
  args:
  - expr: pdp.TypeNames[e.t]
  - snippet:
      result: s
      code: |
        names := make([]string, len(e.expected))
        i := 0
        for t := range e.expected {
        	names[i] = pdp.TypeNames[t]
        	i++
        }
        s := strings.Join(names, ", ")

- id: unknownDataFormatError
  msg: "Can't parse data without keys and result type information"

- id: duplicateContentItemFieldError
  fields:
  - id: field
    type: string
  msg: "Duplicate content field %s"
  args:
  - field: field

- id: missingContentDataError
  msg: "Missing data"

- id: missingContentTypeError
  msg: "Missing result type"

- id: invalidSequenceContentItemNodeError
  fields:
  - id: node
    type: interface{}
  - id: desc
    type: string
  msg: "Expected array or object for %s but got %T"
  args:
  - field: desc
  - field: node

- id: invalidMapContentItemNodeError
  fields:
  - id: node
    type: interface{}
  - id: desc
    type: string
  msg: "Expected object for %s but got %T"
  args:
  - field: desc
  - field: node

- id: unknownCommadFieldError
  fields:
  - id: cmd
    type: string
  msg: "Unknown field %s"
  args:
  - field: cmd

- id: duplicateCommandFieldError
  fields:
  - id: field
    type: string
  msg: "Duplicate field %s"
  args:
  - field: field

- id: missingCommandOpError
  msg: "Missing operation"

- id: missingCommandPathError
  msg: "Missing path"

- id: missingCommandEntityError
  msg: "Missing entity"

- id: unknownContentUpdateOperationError
  fields:
  - id: op
    type: string
  msg: "Unknown content update operation %q"
  args:
  - field: op

- id: arrayEndDelimiterError
  fields:
  - id: actual
    type: json.Delim
  - id: expected
    type: string
  - id: desc
    type: string
  msg: "Expected %s JSON array end %q but got delimiter %q"
  args:
  - field: desc
  - field: expected
  - field: actual
