// Code generated by protoc-gen-go.
// source: service.proto
// DO NOT EDIT!

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	Attribute
	Request
	Response
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Response_Status int32

const (
	Response_OK               Response_Status = 0
	Response_NOTFOUND         Response_Status = 1
	Response_INSUFFICIENTDATA Response_Status = 2
	Response_NOTAPPLICABLE    Response_Status = 3
	Response_GENERALERROR     Response_Status = 4
	Response_SERVICEERROR     Response_Status = 5
	Response_FATALERROR       Response_Status = 6
)

var Response_Status_name = map[int32]string{
	0: "OK",
	1: "NOTFOUND",
	2: "INSUFFICIENTDATA",
	3: "NOTAPPLICABLE",
	4: "GENERALERROR",
	5: "SERVICEERROR",
	6: "FATALERROR",
}
var Response_Status_value = map[string]int32{
	"OK":               0,
	"NOTFOUND":         1,
	"INSUFFICIENTDATA": 2,
	"NOTAPPLICABLE":    3,
	"GENERALERROR":     4,
	"SERVICEERROR":     5,
	"FATALERROR":       6,
}

func (x Response_Status) String() string {
	return proto.EnumName(Response_Status_name, int32(x))
}
func (Response_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Attribute struct {
	Type  string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Attribute) Reset()                    { *m = Attribute{} }
func (m *Attribute) String() string            { return proto.CompactTextString(m) }
func (*Attribute) ProtoMessage()               {}
func (*Attribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Attribute) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Attribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Request struct {
	QueryType  string       `protobuf:"bytes,1,opt,name=query_type,json=queryType" json:"query_type,omitempty"`
	Attributes []*Attribute `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Request) GetQueryType() string {
	if m != nil {
		return m.QueryType
	}
	return ""
}

func (m *Request) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type Response struct {
	Status Response_Status `protobuf:"varint,1,opt,name=status,enum=service.Response_Status" json:"status,omitempty"`
	Values []*Attribute    `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetStatus() Response_Status {
	if m != nil {
		return m.Status
	}
	return Response_OK
}

func (m *Response) GetValues() []*Attribute {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*Attribute)(nil), "service.Attribute")
	proto.RegisterType((*Request)(nil), "service.Request")
	proto.RegisterType((*Response)(nil), "service.Response")
	proto.RegisterEnum("service.Response_Status", Response_Status_name, Response_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PIP service

type PIPClient interface {
	GetAttribute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type pIPClient struct {
	cc *grpc.ClientConn
}

func NewPIPClient(cc *grpc.ClientConn) PIPClient {
	return &pIPClient{cc}
}

func (c *pIPClient) GetAttribute(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/service.PIP/GetAttribute", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PIP service

type PIPServer interface {
	GetAttribute(context.Context, *Request) (*Response, error)
}

func RegisterPIPServer(s *grpc.Server, srv PIPServer) {
	s.RegisterService(&_PIP_serviceDesc, srv)
}

func _PIP_GetAttribute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PIPServer).GetAttribute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.PIP/GetAttribute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PIPServer).GetAttribute(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _PIP_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.PIP",
	HandlerType: (*PIPServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAttribute",
			Handler:    _PIP_GetAttribute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x91, 0xc1, 0x6b, 0xfa, 0x30,
	0x14, 0xc7, 0x6d, 0xd5, 0xaa, 0xef, 0xa7, 0x12, 0x1f, 0x1e, 0xca, 0x0f, 0x06, 0xd2, 0x93, 0xec,
	0x20, 0xa3, 0xc3, 0xdb, 0x2e, 0x99, 0xa6, 0x52, 0x26, 0x69, 0x89, 0x71, 0xa7, 0xc1, 0xd0, 0x91,
	0x83, 0x30, 0xa6, 0x36, 0xa9, 0x20, 0xfb, 0x7b, 0xf7, 0x7f, 0x0c, 0xa3, 0x75, 0x85, 0xc1, 0x6e,
	0x79, 0xdf, 0x7c, 0xbe, 0xf9, 0xbe, 0x97, 0x07, 0x1d, 0xad, 0xb2, 0xc3, 0xe6, 0x4d, 0x8d, 0x76,
	0xd9, 0xd6, 0x6c, 0xb1, 0x71, 0x29, 0x83, 0x31, 0xb4, 0xa8, 0x31, 0xd9, 0x66, 0x9d, 0x1b, 0x85,
	0x08, 0x35, 0x73, 0xdc, 0x29, 0xdf, 0x19, 0x38, 0xc3, 0x96, 0xb0, 0x67, 0xec, 0x43, 0xfd, 0xb0,
	0x7a, 0xcf, 0x95, 0xef, 0x5a, 0xf1, 0x5c, 0x04, 0x2f, 0xd0, 0x10, 0x6a, 0x9f, 0x2b, 0x6d, 0xf0,
	0x06, 0x60, 0x9f, 0xab, 0xec, 0xf8, 0x5a, 0xb2, 0xb6, 0xac, 0x22, 0x4f, 0xfe, 0x10, 0x60, 0x55,
	0x04, 0x68, 0xdf, 0x1d, 0x54, 0x87, 0xff, 0x42, 0x1c, 0x15, 0xdd, 0x5c, 0xb3, 0x45, 0x89, 0x0a,
	0xbe, 0x1c, 0x68, 0x0a, 0xa5, 0x77, 0xdb, 0x0f, 0xad, 0xf0, 0x0e, 0x3c, 0x6d, 0x56, 0x26, 0xd7,
	0xf6, 0xed, 0x6e, 0xe8, 0x5f, 0xcd, 0x05, 0x32, 0x5a, 0xd8, 0x7b, 0x71, 0xe1, 0xf0, 0x16, 0x3c,
	0xdb, 0xe5, 0x5f, 0x71, 0x17, 0x22, 0xf8, 0x04, 0xef, 0xec, 0x46, 0x0f, 0xdc, 0xe4, 0x89, 0x54,
	0xb0, 0x0d, 0x4d, 0x9e, 0xc8, 0x28, 0x59, 0xf2, 0x29, 0x71, 0xb0, 0x0f, 0x24, 0xe6, 0x8b, 0x65,
	0x14, 0xc5, 0x93, 0x98, 0x71, 0x39, 0xa5, 0x92, 0x12, 0x17, 0x7b, 0xd0, 0xe1, 0x89, 0xa4, 0x69,
	0x3a, 0x8f, 0x27, 0xf4, 0x71, 0xce, 0x48, 0x15, 0x09, 0xb4, 0x67, 0x8c, 0x33, 0x41, 0xe7, 0x4c,
	0x88, 0x44, 0x90, 0xda, 0x49, 0x59, 0x30, 0xf1, 0x1c, 0x4f, 0xd8, 0x59, 0xa9, 0x63, 0x17, 0x20,
	0xa2, 0xb2, 0x20, 0xbc, 0xf0, 0x01, 0xaa, 0x69, 0x9c, 0xe2, 0x18, 0xda, 0x33, 0x65, 0x7e, 0xd6,
	0x40, 0x4a, 0x13, 0xda, 0x3f, 0xfe, 0xdf, 0xfb, 0x35, 0x73, 0x50, 0x59, 0x7b, 0x76, 0x95, 0xf7,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xed, 0x6d, 0x77, 0x60, 0xdb, 0x01, 0x00, 0x00,
}
